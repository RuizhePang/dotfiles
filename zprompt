# ~/.zsh_prompt_solarized.zsh

autoload -U colors && colors
setopt prompt_subst

prompt_git() {
	local s=''
	local branchName=''

	git rev-parse --is-inside-work-tree &>/dev/null || return

	branchName=$(git symbolic-ref --quiet --short HEAD 2>/dev/null || \
		git describe --all --exact-match HEAD 2>/dev/null || \
		git rev-parse --short HEAD 2>/dev/null || \
		echo '(unknown)')

	local repoUrl=$(git config --get remote.origin.url)
	if [[ "$repoUrl" == *"chromium/src.git"* ]]; then
		s+='*'
	else
		git diff --quiet --ignore-submodules --cached || s+='+'
		git diff-files --quiet --ignore-submodules -- || s+='!'
		[[ -n $(git ls-files --others --exclude-standard) ]] && s+='?'
		git rev-parse --verify refs/stash &>/dev/null && s+='$'
	fi

	[[ -n "$s" ]] && s=" [$s]"

	echo " on %F{magenta}${branchName}%F{blue}${s}%f"
}

# Color styles
bold="%B"
reset="%f%b%k%F{default}%K{default}"
white="%F{white}"
green="%F{green}"
yellow="%F{yellow}"
orange="%F{208}"
red="%F{red}"
blue="%F{blue}"
violet="%F{magenta}"

# Username and Host color based on context
if [[ "$USER" == "root" ]]; then
	userStyle="${red}"
else
	userStyle="${orange}"
fi

if [[ -n "$SSH_TTY" ]]; then
	hostStyle="${bold}${red}"
else
	hostStyle="${yellow}"
fi

# Final Prompt (multi-line, Git-aware)
PROMPT=$'\n'"${bold}${userStyle}%n${white} at ${hostStyle}%m${white} in ${green}%~"
PROMPT+='$(prompt_git)'
PROMPT+=$'\n'"${white}$ ${reset}"

# Secondary prompt
PS2="${yellow}â†’ ${reset}"
